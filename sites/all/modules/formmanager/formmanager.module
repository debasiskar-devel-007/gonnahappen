<?php

function formmanager_form_alter(&$form, &$form_state, $form_id)
{
    if($form_id == 'user_login' )
    {
         $form['name']['#attributes']['class'][] = 'form-control';
        $form['name']['#attributes']['placeholder'] = 'User Name';
        $form['pass']['#attributes']['class'][] = 'form-control';
        $form['pass']['#attributes']['placeholder'] = 'Password';
        $form['actions']['submit']['#attributes']['class'][] = 'btn btn-primary btn-block btn-flat';
        //$form['submit']['#value'] = 'btn';
        $form['actions']['submit']['#value'] = 'Sign In';
        if(isset($_COOKIE['usernameval'])) $form['name']['#value'] = @$_COOKIE['usernameval'];
        //$form['submit']['#suffix'] = '<p>Some text to place after the submit button</p>';
        $form['submit']['#suffix'] = '


                <div>';

        $form['submit']['#preffix'] ='</div>
            </div> <div class="clearfix"></div>';
        $options = array();
        $options[1] = "Yes";
        $options[0] = "No";

        $form ['rememberme'] = array(
            '#type' => 'checkbox',
            '#title' => t('rememberme'),
            '#default_value' => 0,
            /*'#value'=>5,*/
            '#options' => $options,
            //'#access' => !empty($account->picture->fid),
            '#description' => t('Check this box to delete your current picture.'),
        );

        $form['#validate'][] = 'loginformvalidate';
           // ini_set('session.cookie_lifetime', 0);
           /* foreach ($_COOKIE as $key => $value) {
                setcookie($key, $value, 0);
            }
            setcookie('_fnet_keepLogged', 0, time()+200000);
        }else{
            ini_set('session.cookie_lifetime', 2000000);
            setcookie('_fnet_keepLogged', 1, time()+200000);
        }*/
//exit;
        //$form['#action']= $GLOBALS['base_url'].'/user/login?destination=home';

    }
    //echo current_path();exit;
if($form_id == 'banner_form' ){

  $cur_path=current_path();
    if(current_path()=='admin/content/banner/add' || strpos($cur_path,'admin/content/banner/manage') !== false ) {
        $form['banner_image']['#access'] = FALSE;
        $form['banner_image_url']['#access'] = FALSE;
    }
   else{
      // echo current_path();exit;
       //$ar=arg();
      // if($ar[0]=='banner') {

           $form['banner_name']['#access'] = FALSE;
           $form['banner_help_text']['#access'] = FALSE;
           $form['banner_status']['#access'] = FALSE;
           $form['banner_upload_time']['#access'] = FALSE;
           $heading = t("Add Banner Image");
           $form['banner_name'] = array(
               '#prefix' => '<div class="headingtext"><span>' . $heading . '</span></div>',
               /*'#attributes'=>array('class'=>'form-control')*/
           );
      // }

    }
}

    if($form_id == 'eventlist_form' ) {
        if(strpos(current_path(),'eventlist/gallery/add') !== false || strpos(current_path(),'add-gallery') !== false ) {

            $form['eventlist_name']['#access'] = FALSE;
            $form['eventlist_details']['#access'] = FALSE;
            $form['eventlist_category']['#access'] = FALSE;
            $form['eventlist_banner']['#access'] = FALSE;
            $form['eventlist_location']['#access'] = FALSE;
            $form['eventlist_email']['#access'] = FALSE;
            $form['eventlist_phone']['#access'] = FALSE;
            $form['eventlist_website']['#access'] = FALSE;
            $form['eventlist_image']['#access'] = FALSE;
            $form['eventlist_status']['#access'] = FALSE;
            $form['search_tag']['#access'] = FALSE;
            $form['eventlist_created_by']['#access'] = FALSE;
            $form['eventlist_created_time']['#access'] = FALSE;
            $form['eventlist_datetime']['#access'] = FALSE;
            $form['eventlist_artist']['#access'] = FALSE;
            $form['eventlist_video']['#access'] = FALSE;
            $form['eventlist_tag']['#access'] = FALSE;
            $heading = t("Add Event Gallery Image");


            $form['eventlist_gallery'] = array(
                '#title' => t('Event Gallery Image'),
                '#type' => 'managed_file',
                '#name' => 'eventlist_gallery',
                '#multiple'=>true,
                '#required'=>true,
                '#default_value' => '',
                '#description' => t(''),
                '#upload_validators' => array(
                    'file_validate_extensions' => array('gif png jpg jpeg'),
                    // Pass the maximum file size in bytes
                    'file_validate_size' => array(MAX_FILE_SIZE*1024*1024),
                ),
                '#upload_location' => 'public://eventlist/gallery',
                '#process' => array('formmanager_eventlist_gallery_element_process'),


            );

            $form['actions'] = array(
                '#type' => 'actions',
                'submit' => array(
                    '#type' => 'submit',
                    '#value' => t('Add Image'),
                ),
                );
        }
        if(strpos(current_path(),'add-event') !== false || strpos(current_path(),'edit-event') !== false ) {
            $form['eventlist_name']['#prefix'] = FALSE;
            $form['actions']['delete_link'] = FALSE;
        }
    }

    if($form_id == 'tournament_form'){
        if(strpos(current_path(),'tournament/gallery/add') !== false ) {
            $form['tournament_name']['#access'] = FALSE;
            $form['description1']['#access'] = FALSE;
            $form['description2']['#access'] = FALSE;
            $form['tournament_banner']['#access'] = FALSE;
            $form['tournament_image']['#access'] = FALSE;
            $form['status']['#access'] = FALSE;
            $form['search_tag']['#access'] = FALSE;

            $form['tournament_gallery'] = array(
                '#title' => t('Tournament Gallery Image'),
                '#type' => 'managed_file',
                '#name' => 'tournament_gallery',
                '#multiple'=>true,
                '#required'=>true,
                '#default_value' => '',
                '#description' => t(''),
                '#upload_validators' => array(
                    'file_validate_extensions' => array('gif png jpg jpeg'),
                    // Pass the maximum file size in bytes
                    'file_validate_size' => array(MAX_FILE_SIZE*1024*1024),
                ),
                '#upload_location' => 'public://tournament/gallery',
                '#process' => array('formmanager_tournament_gallery_element_process'),


            );

            $form['actions'] = array(
                '#type' => 'actions',
                'submit' => array(
                    '#type' => 'submit',
                    '#value' => t('Add Image'),
                ),
            );
        }
        if(strpos(current_path(),'tournament/team/add') !== false ) {
            $form['tournament_name']['#access'] = FALSE;
            $form['description1']['#access'] = FALSE;
            $form['description2']['#access'] = FALSE;
            $form['tournament_banner']['#access'] = FALSE;
            $form['tournament_image']['#access'] = FALSE;
            $form['status']['#access'] = FALSE;
            $form['search_tag']['#access'] = FALSE;
            $heading = t("Add Team");

            $form['team_name'] = array(
                '#title' => t('Team Name'),
                '#type' => 'textfield',
                '#default_value' => '',
                '#required' => TRUE,
                '#maxlength' => 255,
                '#prefix' => '<div class="headingtext"><span>'.$heading.'</span></div>',
            );

            $form['team_logo'] = array(
                '#title' => t('Team Logo'),
                '#type' => 'managed_file',
                '#name' => 'team_logo',
                '#multiple'=>true,
                '#required'=>true,
                '#default_value' => '',
                '#description' => t('(Upload banner size width 136px and height 136px)'),
                '#upload_validators' => array(
                    'file_validate_extensions' => array('gif png jpg jpeg'),
                    // Pass the maximum file size in bytes
                    'file_validate_size' => array(MAX_FILE_SIZE*1024*1024),
                ),
                '#upload_location' => 'public://tournament/team',
                '#process' => array('formmanager_team_logo_element_process'),


            );


            $form['actions'] = array(
                '#type' => 'actions',
                'submit' => array(
                    '#type' => 'submit',
                    '#value' => t('Add Team'),
                ),
            );
        }
    }
    if($form_id == 'user_pass')
    {
        $form['name']['#attributes']['class'][] = 'form-control';
        $form['name']['#attributes']['placeholder'] = 'Enter Your Email or User Name';
        $form['pass']['#attributes']['class'][] = 'form-control';

        $form['actions']['submit']['#attributes']['class'][] = 'btn btn-primary btn-block btn-flat';
        //$form['submit']['#value'] = 'btn';
        $form['actions']['submit']['#value'] = 'Sign In';
        //$form['submit']['#suffix'] = '<p>Some text to place after the submit button</p>';
        $form['submit']['#suffix'] = '


                </div> <div class="clearfix"> <div class="col-xs-12 forgot_xs12">';

        $form['submit']['#preffix'] ='</div>
            </div> <div class="clearfix"></div>';



    }


    if($form_id == 'product_form' ){
/*
        $cur_path=current_path();

        if(current_path()=='admin/content/product/add' || strpos($cur_path,'admin/content/product/manage')!==FALSE || current_path()=='admin/content/product/add') {
              $form['product_gallery']['#access'] = FALSE;
        }
        else{

            $form['product_name']['#access'] = FALSE;
            $form['prodcut_category_id']['#access'] = FALSE;
            $form['event_id']['#access'] = FALSE;
            $form['product_desc']['#access'] = FALSE;
            $form['product_image']['#access'] = FALSE;
            $form['product_price']['#access'] = FALSE;
            $form['product_sku']['#access'] = FALSE;
            $form['priority']['#access'] = FALSE;
            $form['status']['#access'] = FALSE;

        }*/

        if(current_path() == 'add-product' || strpos(current_path(),'edit-product')!==FALSE || strpos(current_path(),'add-product-gallery')!==FALSE){
         //   $form['event_id']['#access'] = FALSE;
            $form['status']['#access'] = FALSE;
            $form['actions']['delete_link'] = FALSE;
        }else{
            $form['terms']['#access'] = FALSE;
        }

       if((strpos(current_path(),'product/gallery/add'))!==FALSE  || strpos(current_path(),'add-product-gallery') !== false) {
            $form['product_name']['#access'] = FALSE;
            $form['prodcut_category_id']['#access'] = FALSE;
            $form['event_id']['#access'] = FALSE;
            $form['product_desc']['#access'] = FALSE;
            $form['product_image']['#access'] = FALSE;
            $form['product_price']['#access'] = FALSE;
            $form['product_sku']['#access'] = FALSE;
            $form['priority']['#access'] = FALSE;
            $form['status']['#access'] = FALSE;
           $form['terms']['#access'] = FALSE;

           $form['product_gallery']['#process'] = array('formmanager_product_gallery_element_process');

           $form['actions'] = array(
               '#type' => 'actions',
               'submit' => array(
                   '#type' => 'submit',
                   '#value' => t('Add Image'),
               ),
           );

        }else{
            $form['product_gallery']['#access'] = FALSE;
        }


    }

    if($form_id == 'productattribute_form' ){
        global $user;
        if( strpos(current_path(),'add-product-attributes')!==FALSE){
            $form['prodcut_id']['#default_value'] = arg(1);
        }
        if( strpos(current_path(),'edit-product-attributes')!==FALSE){
            $form['actions']['delete_link'] = FALSE;
        }
        if( strpos(current_path(),'add-product-attributes')!==FALSE || strpos(current_path(),'edit-product-attributes')!==FALSE){
            $pattr_res = array();
            $pattr_arr = db_select('product','p')->fields('p')->condition('product_created_by',$user->uid,'=')->execute();
            if($pattr_arr->rowCount()){
                while($row = $pattr_arr->fetchAssoc()){
                    $pattr_res[$row['product_id']] = $row['product_name'];
                }
            }
            $form['prodcut_id']['#options'] = $pattr_res;
        }
    }

    if($form_id == 'event_partner_sign_up_form' ){
        if(current_path()=='edit-profile') {

            global $user;
            $username = $user->name;

            $res = db_select('custom_user','cu')->fields('cu')->condition('user_name',$username,'=')->execute()->fetchAssoc();

            $form['username']['#access'] = FALSE;
            $form['password']['#access'] = FALSE;
            $form['email']['#access'] = FALSE;
            $form['user_image']['#access'] = FALSE;

            $form['custom_id'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['custom_user_id'],
            );
            $form['prev_email'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['email'],
            );
            $form['prev_username'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['username'],
            );

            $form['event_partner']['#default_value'] = $res['event_partner'];
            $form['fname']['#default_value'] = $res['first_name'];
            $form['lname']['#default_value'] = $res['last_name'];
            $form['address']['#default_value'] = $res['address'];
            $form['phone']['#default_value'] = $res['phone'];
            $form['city']['#default_value'] = $res['city'];
            $form['state']['#default_value'] = $res['state'];
            $form['zip']['#default_value'] = $res['zip'];
            $form['contact_way']['#default_value'] = $res['contact_way'];
            $form['contact_time']['#default_value'] = $res['contact_time'];
            $form['website']['#default_value'] = $res['website'];
            $form['is_sell_request']['#default_value'] = $res['is_sell_request'];
            $form['user_comment']['#default_value'] = $res['user_comment'];
            $form['is_sell_interested']['#default_value'] = $res['is_sell_interested'];
        }
    }

    if($form_id == 'affiliate_sign_up_form' ){
        if(current_path()=='edit-profile') {

            global $user;
            $username = $user->name;

            $res = db_select('custom_user','cu')->fields('cu')->condition('user_name',$username,'=')->execute()->fetchAssoc();

            $form['username']['#access'] = FALSE;
            $form['password']['#access'] = FALSE;
            $form['email']['#access'] = FALSE;
            $form['user_image']['#access'] = FALSE;

            $form['custom_id'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['custom_user_id'],
            );
            $form['prev_email'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['email'],
            );
            $form['prev_username'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['username'],
            );

            $form['fname']['#default_value'] = $res['first_name'];
            $form['lname']['#default_value'] = $res['last_name'];
            $form['phone']['#default_value'] = $res['phone'];
            $form['user_comment']['#default_value'] = $res['user_comment'];
        }
    }

    if($form_id == 'general_user_sign_up_form' ){
        if(current_path()=='edit-profile') {

            global $user;
            $username = $user->name;

            $res = db_select('custom_user','cu')->fields('cu')->condition('user_name',$username,'=')->execute()->fetchAssoc();

            $form['username']['#access'] = FALSE;
            $form['password']['#access'] = FALSE;
            $form['email']['#access'] = FALSE;
            $form['user_image']['#access'] = FALSE;

            $form['custom_id'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['custom_user_id'],
            );
            $form['prev_email'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['email'],
            );
            $form['prev_username'] = array(
                '#title' => t(''),
                '#type' => 'hidden',
                '#value' => $res['username'],
            );

            $form['fname']['#default_value'] = $res['first_name'];
            $form['lname']['#default_value'] = $res['last_name'];
            $form['phone']['#default_value'] = $res['phone'];
        }
    }

    if($form_id == 'add_asset_form' ){
        if(isset($_GET['type'])){
            if($_GET['type'] == 'Audio'){
                $form['talent_image_file']['#access'] = FALSE;
                $form['youtube_link']['#access'] = FALSE;
            }elseif($_GET['type'] == 'Image'){
                $form['talent_audio_file']['#access'] = FALSE;
                $form['youtube_link']['#access'] = FALSE;
            }elseif($_GET['type'] == 'Video'){
                $form['talent_image_file']['#access'] = FALSE;
                $form['talent_audio_file']['#access'] = FALSE;
            }else{
                $form['talent_image_file']['#access'] = FALSE;
                $form['youtube_link']['#access'] = FALSE;
            }
        }else{
            $form['talent_image_file']['#access'] = FALSE;
            $form['youtube_link']['#access'] = FALSE;
        }
    }

}


function formmanager_user_login(&$edit, $account) {
    // Do not redirect when the user is resetting her password.
    if (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset') {
        if (in_array('Site Admin', $account->roles)) {
            drupal_goto('dashboard');
        }else{
            drupal_goto('my-account');
        }
    }
}


function loginformvalidate($form, &$form_state){
    //echo 456;

    //var_dump($form_state['values']['rememberme']);
    if ($form_state['values']['rememberme'] == 1) {
       //echo $form_state['values']['name'];
        setcookie("usernameval",$form_state['values']['name'], time() + 2592000, '/');
    }
    else{


        unset($_COOKIE["usernameval"]);

    }
}

function formmanager_eventlist_gallery_element_process($element, &$form_state, $form){
    $element = file_managed_file_process($element, $form_state, $form);
    $element['upload_button']['#access'] = FALSE;
    return $element;
}

function formmanager_tournament_gallery_element_process($element, &$form_state, $form){
    $element = file_managed_file_process($element, $form_state, $form);
    $element['upload_button']['#access'] = FALSE;
    return $element;
}
function formmanager_team_logo_element_process($element, &$form_state, $form){
    $element = file_managed_file_process($element, $form_state, $form);
    $element['upload_button']['#access'] = FALSE;
    return $element;
}
function formmanager_product_gallery_element_process($element, &$form_state, $form){
    $element = file_managed_file_process($element, $form_state, $form);
    $element['upload_button']['#access'] = FALSE;
    return $element;
}



